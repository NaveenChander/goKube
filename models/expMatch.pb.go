// Code generated by protoc-gen-go. DO NOT EDIT.
// source: expMatch.proto

package models

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PatronName struct {
	First                string   `protobuf:"bytes,1,opt,name=First,proto3" json:"First,omitempty"`
	Last                 string   `protobuf:"bytes,2,opt,name=Last,proto3" json:"Last,omitempty"`
	Middle               string   `protobuf:"bytes,3,opt,name=Middle,proto3" json:"Middle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatronName) Reset()         { *m = PatronName{} }
func (m *PatronName) String() string { return proto.CompactTextString(m) }
func (*PatronName) ProtoMessage()    {}
func (*PatronName) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7bea3939cf7ff4c, []int{0}
}

func (m *PatronName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatronName.Unmarshal(m, b)
}
func (m *PatronName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatronName.Marshal(b, m, deterministic)
}
func (m *PatronName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatronName.Merge(m, src)
}
func (m *PatronName) XXX_Size() int {
	return xxx_messageInfo_PatronName.Size(m)
}
func (m *PatronName) XXX_DiscardUnknown() {
	xxx_messageInfo_PatronName.DiscardUnknown(m)
}

var xxx_messageInfo_PatronName proto.InternalMessageInfo

func (m *PatronName) GetFirst() string {
	if m != nil {
		return m.First
	}
	return ""
}

func (m *PatronName) GetLast() string {
	if m != nil {
		return m.Last
	}
	return ""
}

func (m *PatronName) GetMiddle() string {
	if m != nil {
		return m.Middle
	}
	return ""
}

type PatronAddress struct {
	Street               string   `protobuf:"bytes,1,opt,name=Street,proto3" json:"Street,omitempty"`
	City                 string   `protobuf:"bytes,2,opt,name=City,proto3" json:"City,omitempty"`
	State                string   `protobuf:"bytes,3,opt,name=State,proto3" json:"State,omitempty"`
	Zip                  string   `protobuf:"bytes,4,opt,name=Zip,proto3" json:"Zip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatronAddress) Reset()         { *m = PatronAddress{} }
func (m *PatronAddress) String() string { return proto.CompactTextString(m) }
func (*PatronAddress) ProtoMessage()    {}
func (*PatronAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7bea3939cf7ff4c, []int{1}
}

func (m *PatronAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatronAddress.Unmarshal(m, b)
}
func (m *PatronAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatronAddress.Marshal(b, m, deterministic)
}
func (m *PatronAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatronAddress.Merge(m, src)
}
func (m *PatronAddress) XXX_Size() int {
	return xxx_messageInfo_PatronAddress.Size(m)
}
func (m *PatronAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_PatronAddress.DiscardUnknown(m)
}

var xxx_messageInfo_PatronAddress proto.InternalMessageInfo

func (m *PatronAddress) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *PatronAddress) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *PatronAddress) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *PatronAddress) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

type PatronDriversLicense struct {
	State                string   `protobuf:"bytes,1,opt,name=State,proto3" json:"State,omitempty"`
	Number               string   `protobuf:"bytes,2,opt,name=Number,proto3" json:"Number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatronDriversLicense) Reset()         { *m = PatronDriversLicense{} }
func (m *PatronDriversLicense) String() string { return proto.CompactTextString(m) }
func (*PatronDriversLicense) ProtoMessage()    {}
func (*PatronDriversLicense) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7bea3939cf7ff4c, []int{2}
}

func (m *PatronDriversLicense) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatronDriversLicense.Unmarshal(m, b)
}
func (m *PatronDriversLicense) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatronDriversLicense.Marshal(b, m, deterministic)
}
func (m *PatronDriversLicense) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatronDriversLicense.Merge(m, src)
}
func (m *PatronDriversLicense) XXX_Size() int {
	return xxx_messageInfo_PatronDriversLicense.Size(m)
}
func (m *PatronDriversLicense) XXX_DiscardUnknown() {
	xxx_messageInfo_PatronDriversLicense.DiscardUnknown(m)
}

var xxx_messageInfo_PatronDriversLicense proto.InternalMessageInfo

func (m *PatronDriversLicense) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *PatronDriversLicense) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

type Patron struct {
	Name                 *PatronName           `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Address              *PatronAddress        `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	DriversLicense       *PatronDriversLicense `protobuf:"bytes,3,opt,name=DriversLicense,proto3" json:"DriversLicense,omitempty"`
	Dob                  string                `protobuf:"bytes,4,opt,name=Dob,proto3" json:"Dob,omitempty"`
	Phone                string                `protobuf:"bytes,5,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Product              string                `protobuf:"bytes,6,opt,name=Product,proto3" json:"Product,omitempty"`
	TIN                  string                `protobuf:"bytes,7,opt,name=TIN,proto3" json:"TIN,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Patron) Reset()         { *m = Patron{} }
func (m *Patron) String() string { return proto.CompactTextString(m) }
func (*Patron) ProtoMessage()    {}
func (*Patron) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7bea3939cf7ff4c, []int{3}
}

func (m *Patron) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patron.Unmarshal(m, b)
}
func (m *Patron) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patron.Marshal(b, m, deterministic)
}
func (m *Patron) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patron.Merge(m, src)
}
func (m *Patron) XXX_Size() int {
	return xxx_messageInfo_Patron.Size(m)
}
func (m *Patron) XXX_DiscardUnknown() {
	xxx_messageInfo_Patron.DiscardUnknown(m)
}

var xxx_messageInfo_Patron proto.InternalMessageInfo

func (m *Patron) GetName() *PatronName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Patron) GetAddress() *PatronAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Patron) GetDriversLicense() *PatronDriversLicense {
	if m != nil {
		return m.DriversLicense
	}
	return nil
}

func (m *Patron) GetDob() string {
	if m != nil {
		return m.Dob
	}
	return ""
}

func (m *Patron) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Patron) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *Patron) GetTIN() string {
	if m != nil {
		return m.TIN
	}
	return ""
}

func init() {
	proto.RegisterType((*PatronName)(nil), "models.PatronName")
	proto.RegisterType((*PatronAddress)(nil), "models.PatronAddress")
	proto.RegisterType((*PatronDriversLicense)(nil), "models.PatronDriversLicense")
	proto.RegisterType((*Patron)(nil), "models.Patron")
}

func init() { proto.RegisterFile("expMatch.proto", fileDescriptor_c7bea3939cf7ff4c) }

var fileDescriptor_c7bea3939cf7ff4c = []byte{
	// 307 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x89, 0x6d, 0xb7, 0x38, 0xc5, 0x22, 0x4b, 0x2d, 0x7b, 0xf0, 0x20, 0x39, 0x88, 0xa7,
	0x0a, 0xf5, 0x13, 0x88, 0x41, 0x28, 0xb4, 0x21, 0xa4, 0x3d, 0x79, 0x4b, 0xb2, 0x03, 0x5d, 0x68,
	0xb2, 0x61, 0x77, 0x2b, 0xfa, 0xd9, 0xbd, 0xc8, 0xfe, 0xa3, 0xc6, 0xdb, 0xbc, 0xd9, 0x79, 0xbf,
	0xc9, 0x1b, 0x02, 0x73, 0xfc, 0xea, 0x77, 0x95, 0x69, 0x8e, 0xab, 0x5e, 0x49, 0x23, 0x29, 0x69,
	0x25, 0xc7, 0x93, 0x4e, 0x73, 0x80, 0xa2, 0x32, 0x4a, 0x76, 0x79, 0xd5, 0x22, 0x5d, 0xc0, 0xe4,
	0x5d, 0x28, 0x6d, 0x58, 0xf2, 0x90, 0x3c, 0x5d, 0x97, 0x5e, 0x50, 0x0a, 0xe3, 0x6d, 0xa5, 0x0d,
	0xbb, 0x72, 0x4d, 0x57, 0xd3, 0x25, 0x90, 0x9d, 0xe0, 0xfc, 0x84, 0x6c, 0xe4, 0xba, 0x41, 0xa5,
	0x0d, 0xdc, 0x78, 0xde, 0x2b, 0xe7, 0x0a, 0xb5, 0xb6, 0x83, 0x7b, 0xa3, 0x10, 0x23, 0x33, 0x28,
	0x0b, 0x7d, 0x13, 0xe6, 0x3b, 0x42, 0x6d, 0x6d, 0xd7, 0xef, 0x4d, 0x65, 0x22, 0xd3, 0x0b, 0x7a,
	0x0b, 0xa3, 0x0f, 0xd1, 0xb3, 0xb1, 0xeb, 0xd9, 0x32, 0xcd, 0x60, 0xe1, 0x97, 0x64, 0x4a, 0x7c,
	0xa2, 0xd2, 0x5b, 0xd1, 0x60, 0xa7, 0xf1, 0xe2, 0x4f, 0xfe, 0xfa, 0x97, 0x40, 0xf2, 0x73, 0x5b,
	0xa3, 0x0a, 0xbb, 0x82, 0x4a, 0x7f, 0x12, 0x20, 0x1e, 0x43, 0x1f, 0x61, 0x6c, 0xf3, 0x3b, 0xdf,
	0x6c, 0x4d, 0x57, 0xfe, 0x38, 0xab, 0xcb, 0x65, 0x4a, 0xf7, 0x4e, 0x9f, 0x61, 0x1a, 0x72, 0x39,
	0xd6, 0x6c, 0x7d, 0x37, 0x1c, 0x0d, 0x8f, 0x65, 0x9c, 0xa2, 0x19, 0xcc, 0x87, 0xdf, 0xe8, 0xa2,
	0xcd, 0xd6, 0xf7, 0x43, 0xdf, 0x70, 0xa6, 0xfc, 0xe7, 0xb1, 0x17, 0xc8, 0x64, 0x1d, 0x2f, 0x90,
	0xc9, 0xda, 0x26, 0x2d, 0x8e, 0xb2, 0x43, 0x36, 0xf1, 0x49, 0x9d, 0xa0, 0x0c, 0xa6, 0x85, 0x92,
	0xfc, 0xdc, 0x18, 0x46, 0x5c, 0x3f, 0x4a, 0x4b, 0x38, 0x6c, 0x72, 0x36, 0xf5, 0x84, 0xc3, 0x26,
	0xaf, 0x89, 0xfb, 0x0f, 0x5e, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xbf, 0xaa, 0xb0, 0xa7, 0x19,
	0x02, 0x00, 0x00,
}
